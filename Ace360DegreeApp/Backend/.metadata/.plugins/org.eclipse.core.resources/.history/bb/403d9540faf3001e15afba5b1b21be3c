package com.example.controllers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.example.entities.UserProfile;
import com.example.repositories.ProfileRepository;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/profiles")
public class ProfileController {

    @Autowired
    private ProfileRepository repository;

    // Create a new profile
    @PostMapping
    public ResponseEntity<UserProfile> createProfile(@RequestBody UserProfile userProfile) {
        UserProfile createdProfile = repository.save(userProfile);
        return new ResponseEntity<>(createdProfile, HttpStatus.CREATED);
    }

    // Retrieve all profiles
    @GetMapping
    public ResponseEntity<List<UserProfile>> getAllProfiles() {
        List<UserProfile> profiles = repository.findAll();
        return new ResponseEntity<>(profiles, HttpStatus.OK);
    }

    // Retrieve a single profile by ID
    @GetMapping("/{id}")
    public ResponseEntity<UserProfile> getProfileById(@PathVariable("id") Long id) {
        Optional<UserProfile> profile = repository.findById(id);
        return profile.map(value -> new ResponseEntity<>(value, HttpStatus.OK))
                      .orElseGet(() -> new ResponseEntity<>(HttpStatus.NOT_FOUND));
    }

    // Update an existing profile
    @PutMapping("/{id}")
    public ResponseEntity<UserProfile> updateProfile(@PathVariable("id") Long id, @RequestBody UserProfile userProfile) {
        Optional<UserProfile> existingProfile = repository.findById(id);
        if (existingProfile.isEmpty()) {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        }
        userProfile.setId(id);
        repository.save(userProfile);
        return new ResponseEntity<>(HttpStatus.OK);
    }
}

