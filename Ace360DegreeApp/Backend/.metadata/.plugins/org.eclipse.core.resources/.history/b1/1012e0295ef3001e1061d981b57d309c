package com.example.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.example.Exceptions.AuthenticationException;
import com.example.Exceptions.UserNotFoundException;
import com.example.Exceptions.UserRegistrationException;
import com.example.entities.UserInfo;
import com.example.entities.UserProfile;
import com.example.services.UserInfoManagerImpl;

@RestController
@RequestMapping("/api/users")
public class UserInfoController {

    @Autowired
    private UserInfoManagerImpl userService;

    @PostMapping("/signup")
    public ResponseEntity<String> signup(@RequestBody UserInfo userinfo) {
        try {
            userService.signup(userinfo);
            return ResponseEntity.ok("User registered successfully");
        } catch (UserRegistrationException e) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getMessage());
        }
    }

    @PostMapping("/login")
    public ResponseEntity<String> login(@RequestBody UserInfo loginRequest) {
        try {
            String token = userService.login(loginRequest);
            return ResponseEntity.ok(token);
        } catch (AuthenticationException e) {
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
        }
    }

    @PutMapping("/{userId}")
    public ResponseEntity<String> updateProfile(@PathVariable Long userId, @RequestBody UserProfile userProfileUpdateRequest) {
        try {
            userService.updateUserProfile(userId, userProfileUpdateRequest);
            return ResponseEntity.ok("Profile updated successfully");
        } catch (UserNotFoundException e) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());
        }
    }

    // Other controller methods for password reset, profile retrieval, etc.
}
